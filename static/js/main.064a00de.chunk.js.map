{"version":3,"sources":["roster.js","components/namePlate.js","components/results.js","lineupClass.js","components/uploader.js","App.js","actions/index.js","serviceWorker.js","reducers/lineupArray.js","reducers/index.js","reducers/currentLineup.js","reducers/time.js","reducers/lineupIndex.js","reducers/half.js","reducers/showResults.js","reducers/changedLineup.js","reducers/playbyplay.js","store.js","index.js"],"names":["roster","sort","a","b","lastNameA","split","lastNameB","localeCompare","NamePlate","props","react_default","createElement","className","style","name","background","id","type","onClick","Results","changeResults","lineupArray","map","lineup","i","key","players","join","getTime","pointsFor","pointsAgainst","dRebFor","dRebAgainst","oRebFor","oRebAgainst","FTAfor","FTAagainst","madeTwosFor","missedTwosFor","madeTwosAgainst","missedTwosAgainst","madeThreesFor","missedThreesFor","madeThreesAgainst","missedThreesAgainst","assistsFor","assistsAgainst","turnoversFor","turnoversAgainst","Lineup","time","half","Object","classCallCheck","this","firstHalfArray","secondHalfArray","Uploader","onChange","uploadLineup","accept","App","_Component","_this","possibleConstructorReturn","getPrototypeOf","call","addPlayer","e","playerName","target","currentLineup","removePlayer","playerID","lineupChanged","changeTime","isNaN","value","updateTime","changeHalf","newHalf","endHalf","addTimeToLineup","lineupIndex","submitLineup","sortedPlayerArray","slice","oldIndex","fixTime","arrayLength","length","newLineup","addLineup","newIndex","findLineup","changeIndex","subShooter","firstHalfSubShooter","secondHalfSubShooter","push","parseInt","seconds","substring","minutes","reverseTime","Math","floor","concat","timeArray","toConsumableArray","index","forEach","x","equals","updateText","updatePlayByPlay","stringIncludes","string","result","includes","findTimeGap","play","nextPlay","details","toLowerCase","nextPlayIsAFreeThrow","array","subShooterChecker","j","parseData","text","playByPlay","firstHalfPlays","secondHalfPlays","separateHalves","line","replace","test","_this$parseData","playArray","wakePlay","assisted","updatePoints","missedFreeThrow","updateMissedShots","updateRebounds","updateTurnovers","window","confirm","f","files","reader","FileReader","onload","data","Uint8Array","workbook","XLSX","read","lineupData","Sheets","SheetNames","dataArray","keys","cell","v","w","pop","filter","console","log","tempLineup","importLineup","err","alert","readAsArrayBuffer","headers","label","inherits","createClass","_this2","showResults","results","width","changedLineup","backgroundColor","namePlate","player","uploader","react_csv","firstArray","toString","secondArray","placeholder","Component","connect","store","dispatch","ID","actions","newTime","bool","Boolean","location","hostname","match","testLineup","rootReducer","combineReducers","state","arguments","undefined","action","newArray","addPlayerArray","whichArray","objectSpread","defineProperty","pointsKey","freeThrowKey","_objectSpread3","threePointsKey","threeShotKey","threeAssistKey","threeAssistIncrement","_objectSpread4","twoPointsKey","twoShotKey","twoAssistKey","twoassistIncrement","_objectSpread5","missedTwoKey","missedThreeKey","missedFTKey","oRebKey","dRebKey","turnoverKey","createStore","composeWithDevTools","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.064a00de.chunk.js","sourcesContent":["let roster = [\r\n  \"Brandon Childress\",\r\n  \"Isaiah Mucius\",\r\n  \"Sharone Wright\",\r\n  \"Jahcobi Neath\",\r\n  \"Tariq Ingraham\",\r\n  \"Torry Johnson\",\r\n  \"Andrien White\",\r\n  \"Michael Wynn\",\r\n  \"Chaundee Brown\",\r\n  \"Ismael Massoud\",\r\n  \"Olivier Sarr\",\r\n  \"Blake Buchanan\",\r\n  \"Ody Oguama\",\r\n  \"Sunday Okeke\",\r\n  \"Grant Van Beveren\",\r\n  \"Miles Lester\"\r\n];\r\n\r\nroster.sort((a,b)=>{\r\n  //sort the roster array by player's last name\r\n  const lastNameA = a.split(' ')\r\n  const lastNameB = b.split(' ')\r\n  return lastNameA[1].localeCompare(lastNameB[1])\r\n})\r\n\r\nexport default roster;\r\n","import React from 'react';\r\n\r\nconst NamePlate = (props)=>(\r\n  <div className = 'namePlate' style = {props.name !== '' ? {background:'#CFB53B'} : {background: 'grey'}}>\r\n    <span>{props.name}</span>\r\n    {props.name !== '' && <button id = {props.id} type = 'button' onClick = {props.onClick}>x</button>}\r\n  </div>\r\n)\r\n\r\nexport default NamePlate\r\n","import React from 'react'\r\nconst Results = (props) =>(\r\n  <div className = 'reportDiv'>\r\n    <button type = \"button\" onClick = {props.changeResults}>Back</button>\r\n    <table className = \"report\">\r\n      <tbody>\r\n        <tr>\r\n          <th id = 'lineupTH'>Lineup</th>\r\n          <th>Time</th>\r\n          <th>PF</th>\r\n          <th>PA</th>\r\n          <th>DRF</th>\r\n          <th>DRA</th>\r\n          <th>ORF</th>\r\n          <th>ORA</th>\r\n          <th>FTAF</th>\r\n          <th>FTAA</th>\r\n          <th>2PMF</th>\r\n          <th>2PAF</th>\r\n          <th>2PMA</th>\r\n          <th>2PAA</th>\r\n          <th>3PMF</th>\r\n          <th>3PAF</th>\r\n          <th>3PMA</th>\r\n          <th>3PAA</th>\r\n          <th>AF</th>\r\n          <th>AA</th>\r\n          <th>TOF</th>\r\n          <th>TOA</th>\r\n        </tr>\r\n        {props.lineupArray.map((lineup, i)=>{\r\n          return (\r\n            <tr key ={i}>\r\n              <td>{lineup.players.join('-')}</td>\r\n              <td>{props.getTime(lineup)}</td>\r\n              <td>{lineup.pointsFor}</td>\r\n              <td>{lineup.pointsAgainst}</td>\r\n              <td>{lineup.dRebFor}</td>\r\n              <td>{lineup.dRebAgainst}</td>\r\n              <td>{lineup.oRebFor}</td>\r\n              <td>{lineup.oRebAgainst}</td>\r\n              <td>{lineup.FTAfor}</td>\r\n              <td>{lineup.FTAagainst}</td>\r\n              <td>{lineup.madeTwosFor}</td>\r\n              <td>{lineup.madeTwosFor+lineup.missedTwosFor}</td>\r\n              <td>{lineup.madeTwosAgainst}</td>\r\n              <td>{lineup.madeTwosAgainst + lineup.missedTwosAgainst}</td>\r\n              <td>{lineup.madeThreesFor}</td>\r\n              <td>{lineup.madeThreesFor + lineup.missedThreesFor}</td>\r\n              <td>{lineup.madeThreesAgainst}</td>\r\n              <td>{lineup.madeThreesAgainst + lineup.missedThreesAgainst}</td>\r\n              <td>{lineup.assistsFor}</td>\r\n              <td>{lineup.assistsAgainst}</td>\r\n              <td>{lineup.turnoversFor}</td>\r\n              <td>{lineup.turnoversAgainst}</td>\r\n\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n)\r\n\r\nexport default Results\r\n","class Lineup {\r\n  constructor(players, time, half){\r\n    this.players = players;\r\n    if(half ===1){\r\n      this.firstHalfArray = [time];\r\n      this.secondHalfArray =[];\r\n    }\r\n    else if(half ===2){\r\n      this.firstHalfArray = [];\r\n      this.secondHalfArray = [time]\r\n    }\r\n    this.pointsFor = 0;\r\n    this.pointsAgainst = 0;\r\n    this.dRebFor = 0;\r\n    this.dRebAgainst = 0;\r\n    this.oRebFor = 0;\r\n    this.oRebAgainst = 0;\r\n    this.madeTwosFor = 0;\r\n    this.missedTwosFor = 0;\r\n    this.madeTwosAgainst = 0;\r\n    this.missedTwosAgainst = 0;\r\n    this.madeThreesFor = 0\r\n    this.madeThreesAgainst = 0;\r\n    this.missedThreesFor = 0;\r\n    this.missedThreesAgainst = 0;\r\n    this.turnoversFor = 0;\r\n    this.turnoversAgainst = 0;\r\n    this.assistsFor = 0;\r\n    this.assistsAgainst = 0;\r\n    this.FTAfor = 0;\r\n    this.FTAagainst = 0;\r\n  }\r\n\r\n}\r\n\r\nexport default Lineup\r\n","import React from 'react';\r\n\r\n\r\nconst Uploader = (props) =>(\r\n  <button className = 'lineupSubmit' id = 'button'>\r\n    <input type = 'file' id = 'file' onChange = {props.uploadLineup}\r\n      accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"/>\r\n    Upload Lineup\r\n  </button>\r\n\r\n)\r\n\r\nexport default Uploader\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport roster from './roster.js';\nimport NamePlate from './components/namePlate.js';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index.js'\nimport Results from './components/results.js';\nimport Lineup from './lineupClass.js';\nimport equals from 'array-equal';\nimport { CSVLink } from \"react-csv\";\nimport Uploader from './components/uploader.js'\nimport XLSX from 'xlsx';\n\nexport class App extends Component {\n  constructor(){\n    super();\n    this.headers = [{label:'Lineup', key: 'players'},\n    {label: 'First Half', key: 'firstHalfArray'},\n    {label:'Second Half', key: 'secondHalfArray'}]\n    this.firstHalfSubShooter = [];\n    this.secondHalfSubShooter = [];\n  }\n  addPlayer = (e) =>{\n    let playerName = e.target.id;\n    for(let i = 0; i< 5; i++){\n      if(this.props.currentLineup[i] === ''){\n        this.props.addPlayer(playerName, i);\n        break;\n      }\n    }\n  }\n  removePlayer = (e) =>{\n    const playerID = e.target.id;\n    this.props.removePlayer(playerID);\n    this.props.lineupChanged(true);\n  }\n  changeTime = (e) =>{\n    if(!isNaN(e.target.value)){\n      this.props.updateTime(e.target.value);\n    }\n  }\n  changeHalf = () =>{\n    let newHalf = (this.props.half ===1) ? 2:1;\n    this.props.changeHalf(newHalf)\n  }\n  endHalf = () =>{\n    this.props.addTimeToLineup(0,this.props.lineupIndex, this.props.half);\n    this.props.updateTime('2000');\n    let newHalf = (this.props.half ===1) ? 2:1;\n    this.props.changeHalf(newHalf);\n  }\n  submitLineup = () =>{\n    const sortedPlayerArray = this.props.currentLineup.slice().sort();\n    const oldIndex = this.props.lineupIndex;\n    const time = this.fixTime(this.props.time);\n    const arrayLength = this.props.lineupArray.length;\n    //if its the first lineup of the game, create and push\n    if(this.props.lineupArray.length === 0){\n      let newLineup = new Lineup(sortedPlayerArray, time, this.props.half);\n      this.props.addLineup(newLineup);\n    }\n    //if its not the first lineup, search the array for the lineup\n    else{\n      const newIndex = this.findLineup(sortedPlayerArray);\n      //if the lineup does not exist, create it and push it to the array\n      if(newIndex === -1){\n        let newLineup = new Lineup(sortedPlayerArray, time, this.props.half);\n        //if the time isn't the start of a new half or the end of the old half,\n        //update the previous lineups time\n        if(time !==0 && time !== 1200){\n          this.props.addTimeToLineup(time, oldIndex, this.props.half);\n        }\n        this.props.addLineup(newLineup);\n        this.props.changeIndex(arrayLength);\n      }\n      //if the lineup already exists, add the time to its time array\n      else{\n        if(time !== 0 && time!== 1200){\n          this.props.addTimeToLineup(time, oldIndex, this.props.half);\n        }\n        this.props.addTimeToLineup(time, newIndex, this.props.half);\n        this.props.changeIndex(newIndex);\n      }\n    }\n    this.props.lineupChanged(false);\n  }\n  subShooter = () =>{\n    let array = (this.props.half === 1) ? this.firstHalfSubShooter : this.secondHalfSubShooter\n    array.push(this.fixTime(this.props.time))\n  }\n  //fixes time from mmss to seconds\n  fixTime = time =>{\n    let value;\n    if(time === \"0\"){\n      value = 0;\n    }\n    else if(time.length < 3){\n      value = parseInt(time,10);\n    }\n    else{\n      let seconds = parseInt(time.substring(time.length-2,time.length),10);\n      let minutes = parseInt(time.slice(0,-2),10);\n      minutes = minutes * 60;\n      value = minutes + seconds\n    }\n    return value;\n  }\n  //reverse time from seconds back to mmss\n  reverseTime = time => {\n    const minutes = time/60 < 1 ? '' : Math.floor(time/60);\n    const seconds = time % 60 < 10 ? '0' +time % 60 : time%60;\n    if(minutes === '' && seconds === '00'){\n      return '0'\n    }\n    return `${minutes}${seconds}`\n  }\n  //returns the amount of seconds on the court\n  getTime = (lineup)=>{\n    let time = 0;\n    let timeArray = [...lineup.firstHalfArray,...lineup.secondHalfArray];\n    for(let i=0; i< timeArray.length; i+=2){\n      time += (timeArray[i] - timeArray[i+1])\n    }\n    return time;\n  }\n  findLineup = players => {\n    let index = -1\n    //cycle through each element of the lineupArray\n    this.props.lineupArray.forEach((x,i) => {\n      if(equals(x.players,players)){\n        index = i\n      }\n    });\n    return index;\n  }\n  updateText = (e) =>{\n    this.props.updatePlayByPlay(e.target.value)\n  }\n  stringIncludes = string =>{\n    //if the play includes Wake Forest, its a Wake team play, so include that\n    //i.e. 'Wake Forest Offensive Rebound'\n    let result = (string.includes('Wake Forest')) ? true : false;\n    roster.forEach((name)=>{\n      if(string.includes(name)){\n        result = true;\n      }\n    })\n    return result;\n  }\n  findTimeGap = (play,half,nextPlay) =>{\n    //find the lineup that was on the court at time\n    const time = play.time;\n    const details = play.details.toLowerCase();\n    const nextPlayIsAFreeThrow = (typeof(nextPlay) === 'undefined'\n      || typeof(nextPlay) === 'string') ? false : nextPlay.details.toLowerCase().includes('free throw');\n    const lineupArray = this.props.lineupArray;\n    const array = (half === 1) ? 'firstHalfArray' : 'secondHalfArray';\n    const subShooterChecker = (half === 1) ? this.firstHalfSubShooter : this.secondHalfSubShooter;\n    let index = -1;\n    let freeThrowIndex = -1;\n    //loop through all the lineups that are in the lineup array\n    for(let j = 0; j< lineupArray.length; j++){\n      //then, for each lineup, loop through their time arrays\n      const timeArray = lineupArray[j][array];\n      for(let i =0; i< timeArray.length; i+=2){\n        //first thing to check is special cases regarding subs while at the line\n        if(details.includes('free throw') && nextPlayIsAFreeThrow){\n          //sub before the last free throw attempt.\n          //if a lineup was subbed out and wasn't just subbed in, return that\n          //lineup. (lineup coming in and going out at same time would imply\n          //a second sub after the last free throw)\n          if(timeArray[i+1]===time && timeArray[i]!== time){\n            return j;\n          }\n        }\n        //check for sub after the last free throw only\n        else if(details.includes('free throw') && !nextPlayIsAFreeThrow){\n          //lineup with no time on a free throw attempt implies and sub after\n          //both free throws. i.e. lineup for second free throw played no time.\n          //return this lineup for the second free throw.\n          if(time === timeArray[i+1] && timeArray[i] === time){\n            return j;\n          }\n          //if there was a sub after the shooter, i.e both fts to the first lineup\n          else if(time === timeArray[i+1] && subShooterChecker.includes(time)){\n            return j;\n          }\n        }\n        //Done with free throw cases, now\n        //if the time argument falls between the time pairs, lineup was on court\n        if(timeArray[i] >= time && time > timeArray[i+1]){\n          index = j;\n        }\n        //special case for if something happens as the buzzer is sounding\n        else if( time === 0 && timeArray[i+1] === 0){\n          index = j;\n        }\n      }\n    }\n    return freeThrowIndex === -1 ? index : freeThrowIndex;\n  }\n  parseData = () =>{\n    const text = this.props.playByPlay;\n    let firstHalfPlays = [];\n    let secondHalfPlays = [];\n    //split play by play into halves\n    const separateHalves = text.split('\\n2nd Half\\ntime\\tteam\\tPLAY\\tSCORE\\n');\n    //if the first half exists\n    if(separateHalves.length>0){\n      //split by new line character and loop through\n      separateHalves[0].split('\\n').forEach((line)=>{\n        //split each line into its 3 components (time, play, score)\n        let play = line.split('\\t')\n        //remove highlight button and weird deadball rb b/w missed fts\n        if(typeof play[2]!== 'undefined' && !play[2].includes('Deadball Team Rebound')){\n          firstHalfPlays.push({\n            time: this.fixTime(play[0].replace(':','')),\n            details: play[2]\n          })\n        }\n      })\n    }\n    //if the second half exists, repeat the process\n    if(separateHalves.length>1){\n      separateHalves[1].split('\\n').forEach((line)=>{\n        let play = line.split('\\t');\n        //remove highlight button and weird deadball rb b/w missed fts\n        if(typeof play[2]!== 'undefined' && !play[2].includes('Deadball Team Rebound')){\n          secondHalfPlays.push({\n            time: this.fixTime(play[0].replace(':','')),\n            details: play[2]\n          })\n        }\n      })\n    }\n    return {firstHalfPlays, secondHalfPlays}\n  }\n  test = () =>{\n    const {firstHalfPlays, secondHalfPlays} = this.parseData();\n    //combine the 2 arrays with a separator\n    const playArray = [...firstHalfPlays,'HALF',...secondHalfPlays]\n    let half = 1;\n    playArray.forEach((play,i)=>{\n      //if the play is the separator, switch half to 2 to search 2nd half times\n      if(play === 'HALF'){\n        half = 2;\n      }\n      else{\n        const index = this.findTimeGap(play, half, playArray[i+1]);\n        if(index !== -1){\n          const wakePlay = this.stringIncludes(play.details);\n          const details = play.details.toLowerCase();\n            //if a basket was made\n          if(details.includes('made')){\n            let assisted = false;\n            if(details.includes('assist')){\n              assisted = true;\n            }\n            if(details.includes('free throw')){\n              this.props.updatePoints(\n                'ADD_FREE_THROW',\n                index,\n                wakePlay,\n                assisted\n              );\n            }\n            else if(details.includes('three point')){\n              this.props.updatePoints(\n                'ADD_THREE_POINTER',\n                index,\n                wakePlay,\n                assisted\n              );\n            }\n            else{\n              this.props.updatePoints(\n                'ADD_TWO_POINTER',\n                index,\n                wakePlay,\n                assisted\n              );\n            }\n          }\n          //if the basket was missed\n          else if(details.includes('missed')){\n            if(details.includes('free throw')){\n              this.props.missedFreeThrow(index, wakePlay)\n            }\n            else if(details.includes('three point')){\n              this.props.updateMissedShots('ADD_MISSED_THREE_POINTER',index, wakePlay)\n            }\n            else{\n              this.props.updateMissedShots('ADD_MISSED_TWO_POINTER',index, wakePlay)\n            }\n          }\n          else if(details.includes('defensive rebound')){\n            this.props.updateRebounds('ADD_DEFENSIVE_REBOUND', index, wakePlay)\n          }\n          else if(details.includes('offensive rebound')){\n            this.props.updateRebounds('ADD_OFFENSIVE_REBOUND', index, wakePlay)\n          }\n          else if(details.includes('turnover')){\n            this.props.updateTurnovers(index, wakePlay)\n          }\n        }\n      }\n    })\n    this.props.changeResults();\n  }\n  uploadLineup = (e) =>{\n    if(window.confirm('Uploading a lineup wille erase all previously recorded data. Continue?')){\n      let files = e.target.files, f = files[0]\n      //console.log(f);\n      let reader = new FileReader();\n      reader.onload = (e)=>{\n        try{\n          let data = new Uint8Array(e.target.result);\n          let workbook = XLSX.read(data, {type: 'array'});\n          let lineupData = workbook.Sheets[workbook.SheetNames[0]]\n          let dataArray = [];\n          let lineupArray = [];\n          //iterate through all the cells\n          Object.keys(lineupData).forEach((cell)=>{\n            if(typeof(lineupData[cell].v) !== 'undefined'){\n              //if the cell has data, push it to the array\n              dataArray.push(lineupData[cell].w)\n            }\n          })\n          //pop off free throw sub info\n          this.secondHalfSubShooter = dataArray.pop().split('-').filter((x)=>x!=='none').map((time)=>this.fixTime(time));\n          this.firstHalfSubShooter = dataArray.pop().split('-').filter((x)=>x!=='none').map((time)=>this.fixTime(time));\n          //pop off the header\n          dataArray.pop()\n\n          console.log(dataArray, this.secondHalfSubShooter, this.firstHalfSubShooter)\n\n          //loop through array (ignoring headers) and create a lineup with the data in each row\n          for(let i = 3; i<= dataArray.length-3; i+=3){\n            let tempLineup = new Lineup(dataArray[i].split(',').sort(),0,1);\n            //console.log(tempLineup)\n            tempLineup.firstHalfArray = dataArray[i+1].split('-').filter((x)=> x!=='none').map((time)=>this.fixTime(time));\n            tempLineup.secondHalfArray = dataArray[i+2].split('-').filter((x)=> x!=='none').map((time)=>this.fixTime(time));\n            lineupArray.push(tempLineup)\n            //console.log(i, dataArray.length)\n          }\n          this.props.importLineup(lineupArray)\n        }\n        catch(err){\n          window.alert(err)\n        }\n      }\n    reader.readAsArrayBuffer(f);\n    }\n  }\n  render() {\n    if(this.props.showResults){\n      return (\n        <Results lineupArray = {this.props.lineupArray} getTime = {this.getTime}\n          changeResults = {this.props.changeResults}/>\n      )\n    }\n    else{\n      return (\n        <div className=\"App\">\n          <div className = \"container\">\n            <div className = \"left\">\n              <div className = 'gameInfo'>\n                <div className = 'time'>\n                  Time: <input style = {{width:\"50px\"}} type=\"text\" name = 'time' value = {this.props.time} onChange = {this.changeTime}/>\n                  Half: {this.props.half}\n                </div>\n                <div className = \"lineupInfo\">\n                  <div className = \"inTheGame\">\n                    <p style = {this.props.changedLineup ? {backgroundColor: 'red'}:\n                      {backgroundColor: 'transparent'}}>Current Lineup</p>\n                    <NamePlate id = '0' name = {this.props.currentLineup[0]} onClick = {this.removePlayer}/>\n                    <NamePlate id = '1' name = {this.props.currentLineup[1]} onClick = {this.removePlayer}/>\n                    <NamePlate id = '2' name = {this.props.currentLineup[2]} onClick = {this.removePlayer}/>\n                    <NamePlate id = '3' name = {this.props.currentLineup[3]} onClick = {this.removePlayer}/>\n                    <NamePlate id = '4' name = {this.props.currentLineup[4]} onClick = {this.removePlayer}/>\n                  </div>\n                  <div className = 'playerBank'>\n                    <p>Available Players</p>\n                    {roster.sort().map((player,i) => {\n                      return(\n                        player !== this.props.currentLineup[0] && player !== this.props.currentLineup[1] && player !== this.props.currentLineup[2] &&\n                          player !== this.props.currentLineup[3] && player !== this.props.currentLineup[4] &&\n                          <button  key = {i} onClick = {this.addPlayer} id = {player} type = 'button'>{player}</button>\n                        )\n                      })\n                    }\n                  </div>\n                </div>\n                <div className = 'lineupButtons'>\n                  <button className = \"lineupSubmit\" type = \"button\" onClick = {this.submitLineup}>Submit Lineup</button>\n                  <Uploader uploadLineup = {this.uploadLineup}/>\n\n                </div>\n              </div>\n                <div className = 'resultsButtonContainer'>\n                  <div className = 'resultsButton'>\n                  <p><button type ='button' onClick = {this.endHalf}>End Half</button></p>\n                  <p><button type = \"button\" onClick = {this.changeHalf}>Change Half</button></p>\n                  <p><button type = \"button\" onClick = {this.subShooter}>Sub Shooter</button></p>\n                  <p><button type = \"button\" onClick = {this.test}>Calculate</button></p>\n                  <p><button type = \"button\" onClick = {this.props.changeResults}>Show Results</button></p>\n                  <p><button><CSVLink data={this.props.lineupArray.map((lineup)=>{\n                      let firstArray = (lineup.firstHalfArray.length > 0) ?\n                        lineup.firstHalfArray.map((time)=>this.reverseTime(time)).toString().replace(/,/g, '-') : ['none'];\n                      let secondArray = (lineup.secondHalfArray.length > 0) ?\n                        lineup.secondHalfArray.map((time)=>this.reverseTime(time)).toString().replace(/,/g, '-') : ['none'];\n                      return {players: lineup.players, firstHalfArray: firstArray, secondHalfArray: secondArray}\n                    }).concat([\n                      {\n                        players: 'FT Sub Shooter',\n                        firstHalfArray: this.firstHalfSubShooter.length > 0 ?\n                          this.firstHalfSubShooter.map((time)=>this.reverseTime(time)).toString().replace(/,/g,'-'): ['none'],\n                        secondHalfArray: this.firstHalfSubShooter.length > 0 ?\n                          this.firstHalfSubShooter.map((time)=>this.reverseTime(time)).toString().replace(/,/g,'-'): ['none'],\n                      }\n                  ])} headers = {this.headers}>Lineup CSV</CSVLink></button></p>\n                </div>\n              </div>\n            </div>\n            <div className = 'right'>\n              <textarea type = 'text' name = 'plays' value = {this.props.playByPlay} onChange = {this.updateText}\n                placeholder = 'Enter play by play data here after you have finished tracking lineups'></textarea>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\nexport const mapDispatchToProps = dispatch =>({\n removePlayer: (ID) => dispatch(actions.removePlayer(ID)),\n addPlayer: (name,ID) => dispatch(actions.addPlayer(name,ID)),\n updateTime: (time)=> dispatch(actions.updateTime(time)),\n addLineup: (lineup)=> dispatch(actions.addLineup(lineup)),\n addTimeToLineup: (time, index, half)=> dispatch(actions.addTimeToLineup(time,index,half)),\n changeIndex: (index) => dispatch(actions.changeIndex(index)),\n changeHalf: (half) => dispatch(actions.changeHalf(half)),\n updatePlayByPlay: (text) => dispatch(actions.updatePlayByPlay(text)),\n updatePoints: (type,index, wakePlay, assisted)=> dispatch(actions.updatePoints(type, index, wakePlay, assisted)),\n updateMissedShots: (type,index,wakePlay)=> dispatch(actions.updateMissedShots(type,index, wakePlay)),\n updateRebounds: (type, index, wakePlay)=> dispatch(actions.updateRebounds(type,index,wakePlay)),\n updateTurnovers: (index, wakePlay) => dispatch(actions.updateTurnovers(index,wakePlay)),\n changeResults: ()=> dispatch(actions.changeResults()),\n missedFreeThrow: (index,wakePlay)=> dispatch(actions.missedFreeThrow(index,wakePlay)),\n lineupChanged: (bool)=> dispatch(actions.lineupChanged(bool)),\n importLineup: (array)=> dispatch(actions.uploadLineup(array)),\n\n\n  });\nexport const mapStateToProps = store => ({\n  currentLineup: store.currentLineup,\n  time: store.time,\n  lineupArray: store.lineupArray,\n  lineupIndex: store.lineupIndex,\n  half: store.half,\n  playByPlay: store.playByPlay,\n  showResults: store.showResults,\n  changedLineup: store.changedLineup,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const removePlayer = ID =>({\r\n  type: 'REMOVE_PLAYER',\r\n  ID\r\n})\r\n\r\nexport const addPlayer = (name, ID) =>({\r\n  type: 'ADD_PLAYER',\r\n  name,\r\n  ID\r\n})\r\n\r\nexport const updateTime = time =>({\r\n  type: 'UPDATE_TIME',\r\n  newTime: time\r\n})\r\n\r\nexport const addLineup = lineup =>({\r\n  type: 'ADD_LINEUP',\r\n  lineup\r\n})\r\n\r\nexport const addTimeToLineup = (time, index, half) =>({\r\n    type: 'ADD_TIME_TO_LINEUP',\r\n    time,\r\n    index,\r\n    half,\r\n})\r\n\r\nexport const changeIndex = index =>({\r\n  type: 'CHANGE_INDEX',\r\n  index\r\n})\r\n\r\nexport const changeHalf = half => ({\r\n  type: 'CHANGE_HALF',\r\n  half\r\n})\r\n\r\nexport const updatePlayByPlay = text =>({\r\n  type: 'UPDATE_PLAY_BY_PLAY',\r\n  text,\r\n})\r\n\r\n\r\nexport const updatePoints =(type, index, wakePlay, assisted) =>({\r\n  type,\r\n  index,\r\n  wakePlay,\r\n  assisted\r\n})\r\n\r\nexport const updateMissedShots = (type, index, wakePlay) =>({\r\n  type,\r\n  index,\r\n  wakePlay\r\n})\r\n\r\nexport const updateRebounds = (type, index, wakePlay) =>({\r\n  type,\r\n  index,\r\n  wakePlay\r\n})\r\n\r\nexport const updateTurnovers = (index, wakePlay) =>({\r\n  type: 'ADD_TURNOVER',\r\n  index,\r\n  wakePlay\r\n})\r\n\r\nexport const changeResults = () =>({\r\n  type: 'CHANGE_SHOW_RESULTS'\r\n})\r\n\r\nexport const missedFreeThrow = (index,wakePlay) =>({\r\n  type: 'ADD_MISSED_FREE_THROW',\r\n  index,\r\n  wakePlay\r\n})\r\n\r\nexport const lineupChanged = (bool) =>({\r\n  type: 'LINEUP_CHANGE',\r\n  bool\r\n})\r\n\r\nexport const uploadLineup = (array) =>({\r\n  type: 'UPLOAD_LINEUP',\r\n  array\r\n})\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//for testing purposes\r\nimport Lineup from '../lineupClass.js'\r\nlet testLineup = new Lineup([\r\n  'Brandon Childress',\r\n  'Sharone Wright',\r\n  'Chaundee Brown',\r\n  'Jaylen Hoard',\r\n  'Olivier Sarr'],1200,1);\r\n  testLineup.firstHalfArray = [1200,0];\r\n  testLineup.secondHalfArray = [1200,0];\r\n\r\n\r\n\r\n\r\nexport const lineupArray = (state = [], action) => {\r\n  switch(action.type){\r\n    case 'ADD_LINEUP':\r\n      let newArray = state.slice();\r\n      newArray.push(action.lineup);\r\n      return newArray;\r\n    case 'UPLOAD_LINEUP':\r\n      return action.array\r\n    case 'ADD_TIME_TO_LINEUP':\r\n      return state.map((lineup, index)=>{\r\n        if(index !== action.index){\r\n          return lineup\r\n        }\r\n        else{\r\n          let whichArray = (action.half === 1) ? 'firstHalfArray' : 'secondHalfArray';\r\n          let timeArray = lineup[whichArray].slice();\r\n          timeArray.push(action.time);\r\n          return {...lineup, [whichArray]: timeArray}\r\n        }\r\n      })\r\n      case 'ADD_FREE_THROW':\r\n        const pointsKey = (action.wakePlay) ? 'pointsFor' : 'pointsAgainst'\r\n        const freeThrowKey = (action.wakePlay) ? 'FTAfor' : 'FTAagainst'\r\n        return state.map((lineup,index)=>{\r\n          if(index !== action.index){\r\n            return lineup;\r\n          }\r\n          return {...lineup, [pointsKey]: lineup[pointsKey] + 1, [freeThrowKey]: lineup[freeThrowKey] + 1}\r\n        })\r\n        case 'ADD_THREE_POINTER':\r\n          const threePointsKey = (action.wakePlay) ? 'pointsFor' : 'pointsAgainst';\r\n          const threeShotKey = (action.wakePlay) ? 'madeThreesFor' : 'madeThreesAgainst';\r\n          const threeAssistKey = (action.wakePlay) ? 'assistsFor' : 'assistsAgainst';\r\n          const threeAssistIncrement = (action.assisted) ? 1 : 0\r\n          return state.map((lineup,index)=>{\r\n            if(index !== action.index){\r\n              return lineup;\r\n            }\r\n            return {...lineup, [threePointsKey]: lineup[threePointsKey] + 3,\r\n              [threeShotKey]: lineup[threeShotKey] + 1,\r\n              [threeAssistKey]: lineup[threeAssistKey] + threeAssistIncrement}\r\n          })\r\n          case 'ADD_TWO_POINTER':\r\n            const twoPointsKey = (action.wakePlay) ? 'pointsFor' : 'pointsAgainst';\r\n            const twoShotKey = (action.wakePlay) ? 'madeTwosFor' : 'madeTwosAgainst'\r\n            const twoAssistKey = (action.wakePlay) ? 'assistsFor' : 'assistsAgainst';\r\n            const twoassistIncrement = (action.assisted) ? 1 : 0\r\n            return state.map((lineup,index)=>{\r\n              if(index !== action.index){\r\n                return lineup;\r\n              }\r\n              return {...lineup, [twoPointsKey]: lineup[twoPointsKey] + 2,\r\n                [twoShotKey]: lineup[twoShotKey] + 1,\r\n                [twoAssistKey]: lineup[twoAssistKey] + twoassistIncrement}\r\n            })\r\n          case 'ADD_MISSED_TWO_POINTER':\r\n            const missedTwoKey = (action.wakePlay) ? 'missedTwosFor':'missedTwosAgainst'\r\n            return state.map((lineup,index)=>{\r\n              if(index !== action.index){\r\n                return lineup\r\n              }\r\n              return {...lineup, [missedTwoKey]: lineup[missedTwoKey] + 1};\r\n            })\r\n            case 'ADD_MISSED_THREE_POINTER':\r\n              const missedThreeKey = (action.wakePlay)? 'missedThreesFor':'missedThreesAgainst';\r\n              return state.map((lineup,index)=>{\r\n                if(index !== action.index){\r\n                  return lineup;\r\n                }\r\n                return {...lineup, [missedThreeKey]: lineup[missedThreeKey] + 1}\r\n              })\r\n            case 'ADD_MISSED_FREE_THROW':\r\n              const missedFTKey = (action.wakePlay)? 'FTAfor':'FTAagainst';\r\n              return state.map((lineup,index)=>{\r\n                if(index !== action.index){\r\n                  return lineup;\r\n                }\r\n                return {...lineup, [missedFTKey]: lineup[missedFTKey] + 1}\r\n              })\r\n          case 'ADD_OFFENSIVE_REBOUND':\r\n            const oRebKey = (action.wakePlay) ? 'oRebFor' : 'oRebAgainst';\r\n            return state.map((lineup,index)=>{\r\n              if(index !== action.index){\r\n                return lineup;\r\n              }\r\n              return {...lineup, [oRebKey]:lineup[oRebKey] + 1}\r\n            })\r\n            case 'ADD_DEFENSIVE_REBOUND':\r\n              const dRebKey = (action.wakePlay) ? 'dRebFor' : 'dRebAgainst';\r\n              return state.map((lineup,index)=>{\r\n                if(index !== action.index){\r\n                  return lineup;\r\n                }\r\n                return {...lineup, [dRebKey]:lineup[dRebKey] + 1}\r\n              })\r\n            case 'ADD_TURNOVER':\r\n              const turnoverKey = (action.wakePlay) ? 'turnoversFor' : 'turnoversAgainst'\r\n              return state.map((lineup,index)=>{\r\n                if(index !== action.index){\r\n                  return lineup\r\n                }\r\n                return {...lineup, [turnoverKey]:lineup[turnoverKey] + 1}\r\n              })\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { currentLineup } from './currentLineup.js';\r\nimport { time } from './time.js';\r\nimport { lineupArray } from './lineupArray.js';\r\nimport { lineupIndex } from './lineupIndex.js';\r\nimport { half } from './half.js'\r\nimport { playByPlay } from './playbyplay.js';\r\nimport { showResults } from './showResults.js'\r\nimport { changedLineup } from './changedLineup.js'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  currentLineup,\r\n  lineupArray,\r\n  time,\r\n  lineupIndex,\r\n  half,\r\n  showResults,\r\n  changedLineup,\r\n  playByPlay,\r\n\r\n});\r\n\r\n\r\nexport default rootReducer;\r\n","\r\n\r\nexport const currentLineup = (state = ['Brandon Childress','Andrien White', 'Chaundee Brown', 'Isaiah Mucius', 'Olivier Sarr'], action) =>{\r\n  switch(action.type){\r\n    case 'REMOVE_PLAYER':\r\n      let newArray = state.slice();\r\n      newArray[action.ID] = '';\r\n      return newArray;\r\n    case 'ADD_PLAYER':\r\n      let addPlayerArray = state.slice();\r\n      addPlayerArray[action.ID] = action.name;\r\n      return addPlayerArray;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","\r\n\r\nexport const time = (state = '2000', action)=>{\r\n  switch(action.type){\r\n    case 'UPDATE_TIME':\r\n      return action.newTime;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const lineupIndex = (state = 0, action) => {\r\n  switch(action.type){\r\n    case 'CHANGE_INDEX':\r\n      return action.index;\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const half = (state = 1, action) =>{\r\n  switch (action.type){\r\n    case 'CHANGE_HALF':\r\n      return action.half;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const showResults = (state = false, action) =>{\r\n  switch(action.type){\r\n    case 'CHANGE_SHOW_RESULTS':\r\n      return !state;\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const changedLineup = (state = false, action)=>{\r\n  switch(action.type){\r\n    case 'LINEUP_CHANGE':\r\n      return action.bool;\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {stateGame as testGame} from '../testFile.js';\r\n\r\n\r\nexport const playByPlay = (state = '', action) =>{\r\n  switch(action.type){\r\n    case 'UPDATE_PLAY_BY_PLAY':\r\n      return action.text;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers/index.js'\r\n\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  undefined,composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store.js'\n\nReactDOM.render(<Provider store = {store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}